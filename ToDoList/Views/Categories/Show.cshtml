@using ToDoList.Models;

<h1>To Do List</h1>
<h2>Category: @Model["category"].GetName()</h2>
<hr />

@if (@Model["categoryItems"].Count != 0)
{
  <h4>Here are all the items in this category:</h4>
  <ul>
    @foreach (var item in @Model["categoryItems"])
    {
      <li>@item.GetDescription()</li>
    }
  </ul>
}

<h4>Add an item to this category:</h4>
@*
This form will be responsible for selecting existing Items and adding them to a Category *@

<form action='/categories/@Model["category"].GetId()/items/new' method='post'>
  <label for='itemId'>Select a item</label>
  @* Notice we use a select tag here. This is also known as a "drop down menu". This field allows users to select an existing Item to associate with this Category. To do this, we simply loop through allItems to populate each Item as an option in this drop-down select field. *@
  <select id='itemId' name='itemId' type='text'>

    @foreach (var item in @Model["allItems"])
    {
      <option value='@item.GetId()'>@item.GetDescription()</option>
    }

  </select>
  <button type='submit'>Add</button>
</form>

<p><a href="/">Return to Main Page</a></p>
